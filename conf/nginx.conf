#启动进程,通常设置成和cpu的数量相等
worker_processes 4;

error_log logs/error.log;

events {
    worker_connections 1024;
}

#运行用户
user www-data;    

http {
    default_type  application/octet-stream;
    autoindex on; #开启nginx目录浏览功能
    autoindex_exact_size off; #文件大小从KB开始显示
    autoindex_localtime on; #显示文件修改时间为服务器本地时间
    sendfile        on;
    
    #设置lua缓存off,product应该开启
	lua_code_cache off;
    
    server {
        listen 8080;
        root   html;
        
        location / {
           index  index.html;
        }
        
        location /test {
           default_type text/json;
           set $a "hello";
           set $b "test";
           set_by_lua_file $res conf/test.lua $a $b;
           echo $res;
        }
        
         location /test1 {
           default_type text/text;
           set $a "hello";
           set $b "test1";
           set_by_lua_file $res conf/test.lua $a $b;
           echo $res;
        }
        
        location /req {
           default_type text/json;
           
           set_by_lua_file $res conf/req.lua;
           echo $res;
        }
        
        location /version {
           default_type text/json;
           
           set_by_lua_file $res conf/version.lua;
           echo $res;
        }
        
        location /post {
           lua_need_request_body on;
           client_max_body_size 100k;
           client_body_buffer_size 100k;
           default_type text/json;
           
           content_by_lua '
             ngx.req.read_body()
             local args = ngx.req.get_post_args()
             for k, v in pairs(args) do
               ngx.say(k, "=", v)
             end
           ';
        }
    }
}
